This is based on the patch found at
  https://startux.de/gaming/9-wine/10-wine-patch-to-use-3gb-userspace

However, it can be toggled via an environment variable named
WINE_HIGHER_USERSPACE_MMAP.

Like some of wine-staging's settings, this has the potential to cause
odd behavior. Anything which relies on windows allocation semantics, to
be precise. It's probably a small subset of programs, but useful to
note.

This works *very* well with Bethesda games.

diff -ur a/libs/wine/mmap.c b/libs/wine/mmap.c
--- a/libs/wine/mmap.c	2015-10-30 09:20:44.000000000 -0400
+++ b/libs/wine/mmap.c	2015-11-02 19:18:24.239794753 -0500
@@ -350,6 +350,13 @@
     char * const stack_ptr = &stack;
     char *user_space_limit = (char *)0x7ffe0000;
 
+    char *env_high_str = getenv("WINE_HIGHER_USERSPACE_MMAP");
+
+    if (env_high_str != NULL && *env_high_str != '\0') {
+        user_space_limit = (char*)0xbffe0000;
+        fprintf(stderr, "fixme:libs:mmap Forced to run with higher user_space_limit, do not report bugs\n");
+    }
+
     reserve_malloc_space( 8 * 1024 * 1024 );
 
     if (!list_head( &reserved_areas ))
